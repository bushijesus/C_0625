//
// Created by Administrator on 2023/6/25.
//

#include <stdio.h>
#include <string.h>
void printOddTimesNum(const int arr[], int n)
{
    int eor = 0;
    for (int i = 0; i < n; ++i) {
        eor ^= arr[i];          // 将每个数都和 0 异或，最后 eor 的值就是那个出现了奇数次的数
    }
    printf("%d\n", eor);
}

void printOddTimesNum2(const int arr[], int n)
{
    // 假设出现了奇数次的两个数分别为a和b
    int eor1 = 0;
    for (int i = 0; i < n; ++i) {
        eor1 ^= arr[i];          // 将每个数都和 0 异或，最后 eor1 的值是 a ^ b
    }
    int eor2 = 0;
    int rightOne = eor1 & (~eor1 + 1);          // 用来记录从右往左第一位为1的数
    for (int i = 0; i < n; ++i) {
        if((arr[i] & rightOne) != 0)
        {
            eor2 ^= arr[i];       // 此时eor2的值为 a or b
        }
    }
    printf("%d %d\n", eor2, eor2^eor1);
}

int issert_sort(int * arr, int m, int key)
{
    for (int i = 0; i < m; ++i)
    {

    }
}

void insert_sort(int * arr, int n)
{
    int i = 0;
    int j = 0;
    int tmp = 0;
    for (i = 0; i < n; ++i)
    {
        tmp = arr[i];
        j = i - 1;
        while (j >= 0 && tmp < arr[j])
        {
            arr[j+1] = arr[j];
            j--;
        }
        arr[j+1] = tmp;
    }
}

void swap(int * a, int * b)
{
    int tmp = *a;
    *a = *b;
    *b = tmp;
}
void select_sort(int * arr, int n)
{
    int i, j;
    for(i = 0; i < n; i++)
    {
        int min = i;
        for(j = i+1; j < n; j++)
        {
            if(arr[j] < arr[min])
            {
                min = j;
            }
        }
        // 交换 min 和 arr[i] 的值
        swap(&arr[i], &arr[min]);
    }
}
int main()
{
//    int a = 0;
//    int b = 1;
//    // 通过异或操作交换两数的值
//    a = a ^ b;
//    b = a ^ b;
//    a = a ^ b;
//    int arr1[] = {1,1,1,1,2,2,3,3,3,};
//    int arr2[] = {1,1,1,1,2,2,3,3,3,4};
//    printOddTimesNum(arr1, 9);   // 3
//    printOddTimesNum2(arr2,10);  // 3 4

    int arr[] = {1,5,2,6,3,4,8,5,6,3};
    for (int i = 0; i < 10; ++i) {
        printf("%d ", arr[i]);
    }
    printf("\n");
    select_sort(arr, 10);
    for (int i = 0; i < 10; ++i) {
        printf("%d ", arr[i]);
    }
    struct Stu{
        char sex;
        char birth[8];
        int id;
        char name[20];
    }s;
    s.sex = 'f';
    strcpy(s.birth, "20011006");

}
